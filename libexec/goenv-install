#!/usr/bin/env bash
# Summary: Install a version of Go.
#
# Usage: goenv install <version>
#
# Versions should be in the form of N.N.N

# Bomb out if we hit an error, ever
set -e

# helper functions
function download_url_exist() {
    local url="$1"
    curl -L --output /dev/null --silent --head --fail "$url"
}

function download_url() {
    local version="$1"
    local platform="$2"
    local arch="$3"
    local extra="$4"

    # newer versions are at http://golang.org/dl
    # older versions are at http://go.googlecode.com/files

    local base_url_new="http://golang.org/dl"
    local base_url_old="http://go.googlecode.com/files"

    download="${base_url_new}/go${version}.${platform}-${arch}${extra}.tar.gz"
    if download_url_exist $download ;
    then
        echo $download
        return
    fi

    download="${base_url_old}/go${version}.${platform}-${arch}${extra}.tar.gz"
    echo $download
}

# Verbose output in debug mode
[ -n "$GOENV_DEBUG" ] && {
  set -x
}

# Pull the desired version out of ARGV
version="$1"
version_dir="$GOENV_ROOT/versions/$version"

# stash the pwd
OLDPWD=$(pwd)

# Make the version dir and get in there
mkdir -p "$version_dir"
cd "$version_dir"

platform="$(uname -s | tr '[:upper:]' '[:lower:]')"

if [ "$(uname -m)" = "x86_64" ]; then
  arch="amd64"
else
  arch="386"
fi

if [ "$platform" = "darwin" ]; then
  # Since go version 1.2, osx packages were subdivided into 10.6 and 10.8
  if [ "$version" = "1.2" -o "$version" \> "1.2" ]; then
    if [ "$(uname -r)" \> "12" ]; then
      extra="-osx10.8"
    else
      extra="-osx10.6"
    fi
  fi
fi

# URL to download from
download=$(download_url $version $platform $arch $extra)

# Can't get too clever here
set +e

# Download binary tarball and install
# Linux downloads are formatted differently from OS X
(
  curl -L -s -f "$download" > "/tmp/go${version}.${platform}-${arch}.tar.gz" && \
  tar zxvf "/tmp/go${version}.${platform}-${arch}.tar.gz" --strip-components 1 && \
  rm "/tmp/go${version}.${platform}-${arch}.tar.gz"
) || \
  {
    cd $OLDPWD
    rmdir "$version_dir"

    echo "goenv: unable to install Go \`${version}' from binary, download not available"
    exit 1
  }

echo "Installed ${version}"
cd $OLDPWD

exec "${GOENV_ROOT}/bin/goenv" rehash
