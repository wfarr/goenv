#!/usr/bin/env bash
#
# Summary: Execute a command from a particular Go version.
#
# Usage: goenv exec <command> [<args>]
#
# Puts the current Go version onto PATH and runs the specified command.

# Bomb out if we hit an error, ever
set -e

# Verbose output in debug mode
[ -n "$GOENV_DEBUG" ] && {
  set -x
}

# Set the current Go version
if [ -z "$GOENV_VERSION" ]; then
  GOENV_VERSION="$(goenv version)"

  # Couldn't infer from a file either
  if [ -z "$GOENV_VERSION" ]; then
    echo "goenv: no \`GOENV_VERSION' configured" >&2
    exit 1
  fi
fi

GOROOT="$GOENV_ROOT/versions/$GOENV_VERSION"

# if the specified Go version lacks this bin, bail
if [ ! -x "$GOROOT/bin/$1" ]; then
  echo "goenv: \`$1' does not exist for $GOENV_VERSION" >&2

  for version in "$(goenv versions)"; do
    if [ -x "$GOENV_ROOT/versions/$version/bin/$1" ]; then
      echo "  $version" >&2
    fi
  done

  exit 1
fi

export GOENV_VERSION GOROOT

# Put our bindir onto PATH
export PATH="$GOROOT/bin:$PATH"

exec "$@"
